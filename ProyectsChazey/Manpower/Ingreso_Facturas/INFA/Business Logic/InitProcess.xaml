<Activity mc:Ignorable="sap sap2010" x:Class="InitProcess" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=mscorlib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="dicConfig" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="dtMaestroClientes" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="dtTablaEquivalencias" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="dtDataToProcess" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="boolValidationProcess" Type="OutArgument(x:Boolean)" />
    <x:Property Name="strInitProcessError" Type="OutArgument(x:String)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>2052,861</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Platform.Triggers</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Python.Activities</x:String>
      <x:String>UiPath.Python</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Python.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <StateMachine InitialState="{x:Reference __ReferenceID8}" DisplayName="State Machine" sap:VirtualizedContainerService.HintSize="2062,796" sap2010:WorkflowViewState.IdRef="StateMachine_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">750,2.5</av:Point>
        <x:Double x:Key="StateContainerWidth">2027.7646476675654</x:Double>
        <x:Double x:Key="StateContainerHeight">759.97042306723938</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">783,77.5 783,107.5 783.1,107.5 783.1,129.5</av:PointCollection>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <State x:Name="__ReferenceID8" DisplayName="0.Validate Inputs" sap:VirtualizedContainerService.HintSize="178,119" sap2010:WorkflowViewState.IdRef="State_1">
      <State.Entry>
        <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="805,4154" sap2010:WorkflowViewState.IdRef="TryCatch_1">
          <TryCatch.Try>
            <Sequence sap:VirtualizedContainerService.HintSize="767,3922" sap2010:WorkflowViewState.IdRef="Sequence_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Delay Duration="00:00:10" sap:VirtualizedContainerService.HintSize="725,22" sap2010:WorkflowViewState.IdRef="Delay_1" />
              <Assign sap:VirtualizedContainerService.HintSize="725,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                <Assign.To>
                  <OutArgument x:TypeArguments="si:FileInfo">
                    <mca:CSharpReference x:TypeArguments="si:FileInfo" sap2010:WorkflowViewState.IdRef="CSharpReference`1_10">fileLogCombineInfo</mca:CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="si:FileInfo">
                    <mca:CSharpValue x:TypeArguments="si:FileInfo" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">new FileInfo(Path.Combine(dicConfig["RutaArchivosGenerados"].ToString(),dicConfig["CombineLogInputFile"].ToString()))</mca:CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="725,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">
                    <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_27">intCountTry</mca:CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">0</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="725,60" sap2010:WorkflowViewState.IdRef="Assign_35">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">
                    <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_67">Exception</mca:CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_127">null</mca:CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
              <ui:GetRobotCredential TimeoutMS="{x:Null}" DisplayName="Get Credential" sap:VirtualizedContainerService.HintSize="725,183" sap2010:WorkflowViewState.IdRef="GetRobotCredential_5">
                <ui:GetRobotCredential.AssetName>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_333">dicConfig["assetSQLCredentials"].ToString()</mca:CSharpValue>
                  </InArgument>
                </ui:GetRobotCredential.AssetName>
                <ui:GetRobotCredential.Password>
                  <OutArgument x:TypeArguments="ss:SecureString">
                    <mca:CSharpReference x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpReference`1_108">Password</mca:CSharpReference>
                  </OutArgument>
                </ui:GetRobotCredential.Password>
                <ui:GetRobotCredential.Username>
                  <OutArgument x:TypeArguments="x:String">
                    <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_107">strUserDatabase</mca:CSharpReference>
                  </OutArgument>
                </ui:GetRobotCredential.Username>
              </ui:GetRobotCredential>
              <Assign sap:VirtualizedContainerService.HintSize="725,60" sap2010:WorkflowViewState.IdRef="Assign_52">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">
                    <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_109">strPasswordDatabase</mca:CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_334">new System.Net.NetworkCredential(string.Empty, Password).Password</mca:CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
              <If DisplayName="If Compañias OC Exists" sap:VirtualizedContainerService.HintSize="725,537" sap2010:WorkflowViewState.IdRef="If_7">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_336">!File.Exists(Path.Combine(dicConfig["PathOCCompañiasFile"].ToString(),dicConfig["NameOCCompañiasFile"].ToString()))</mca:CSharpValue>
                  </InArgument>
                </If.Condition>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="376,377" sap2010:WorkflowViewState.IdRef="Sequence_43">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence sap:VirtualizedContainerService.HintSize="334,152" sap2010:WorkflowViewState.IdRef="Sequence_42">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_54">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_112">boolOCCompañias</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info">
                      <ui:LogMessage.Message>
                        <InArgument x:TypeArguments="x:Object">
                          <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_337">"The" + Path.Combine(dicConfig["RutaParametrizacion"].ToString(),dicConfig["fileLogExecution"].ToString()) + " file don´t exists it will be downloaded"</mca:CSharpValue>
                        </InArgument>
                      </ui:LogMessage.Message>
                    </ui:LogMessage>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_44">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_55">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">
                          <mca:CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_113">boolOCCompañias</mca:CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Else>
              </If>
              <If DisplayName="If Detalle de deuda Exists" sap:VirtualizedContainerService.HintSize="725,537" sap2010:WorkflowViewState.IdRef="If_1">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_91">!File.Exists(Path.Combine(dicConfig["RutaArchivosRecibidos"].ToString(),"DD"+DateTime.Now.ToString("ddMMyyyy")+"*.xlsx"))</mca:CSharpValue>
                  </InArgument>
                </If.Condition>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="376,377" sap2010:WorkflowViewState.IdRef="Sequence_25">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence sap:VirtualizedContainerService.HintSize="334,152" sap2010:WorkflowViewState.IdRef="Sequence_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_14">boolPeopleSoftInput</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info">
                      <ui:LogMessage.Message>
                        <InArgument x:TypeArguments="x:Object">
                          <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_55">"The" + Path.Combine(dicConfig["RutaParametrizacion"].ToString(),dicConfig["fileLogExecution"].ToString()) + " file don´t exists it will be downloaded"</mca:CSharpValue>
                        </InArgument>
                      </ui:LogMessage.Message>
                    </ui:LogMessage>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">
                          <mca:CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">boolPeopleSoftInput</mca:CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Else>
              </If>
              <If DisplayName="If Log Exists" sap:VirtualizedContainerService.HintSize="725,637" sap2010:WorkflowViewState.IdRef="If_2">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_50">!File.Exists(Path.Combine(dicConfig["RutaParametrizacion"].ToString(),dicConfig["fileLogExecution"].ToString()))</mca:CSharpValue>
                  </InArgument>
                </If.Condition>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="376,477" sap2010:WorkflowViewState.IdRef="Sequence_24">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence sap:VirtualizedContainerService.HintSize="334,152" sap2010:WorkflowViewState.IdRef="Sequence_5">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_16">boolCopyLogExecution</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Error">
                      <ui:LogMessage.Message>
                        <InArgument x:TypeArguments="x:Object">
                          <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_51">"The" + Path.Combine(dicConfig["RutaParametrizacion"].ToString(),dicConfig["fileLogExecution"].ToString()) + " file don´t exists"</mca:CSharpValue>
                        </InArgument>
                      </ui:LogMessage.Message>
                    </ui:LogMessage>
                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_32">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">
                          <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_68">Exception</mca:CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">
                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_128">"The" + Path.Combine(dicConfig["RutaParametrizacion"].ToString(),dicConfig["fileLogExecution"].ToString()) + " file don´t exists"</mca:CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_10">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">
                          <mca:CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_15">boolCopyLogExecution</mca:CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Else>
              </If>
              <If DisplayName="If Maestro clientes Exists" sap:VirtualizedContainerService.HintSize="725,637" sap2010:WorkflowViewState.IdRef="If_3">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">!File.Exists(Path.Combine(dicConfig["RutaParametrizacion"].ToString(),dicConfig["fileMaestroClientes"].ToString()))</mca:CSharpValue>
                  </InArgument>
                </If.Condition>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="376,477" sap2010:WorkflowViewState.IdRef="Sequence_23">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence sap:VirtualizedContainerService.HintSize="334,152" sap2010:WorkflowViewState.IdRef="Sequence_6">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_17">boolMasterCustomer</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Error">
                      <ui:LogMessage.Message>
                        <InArgument x:TypeArguments="x:Object">
                          <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_52">"The " + Path.Combine(dicConfig["RutaParametrizacion"].ToString(),dicConfig["fileMaestroClientes"].ToString()) + " file don't exists"</mca:CSharpValue>
                        </InArgument>
                      </ui:LogMessage.Message>
                    </ui:LogMessage>
                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_33">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">
                          <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_69">Exception</mca:CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">
                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_129">"The " + Path.Combine(dicConfig["RutaParametrizacion"].ToString(),dicConfig["fileMaestroClientes"].ToString()) + " file don't exists"</mca:CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_7">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">
                          <mca:CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_18">boolMasterCustomer</mca:CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Else>
              </If>
              <If DisplayName="If Tabla Equivalencias Exists" sap:VirtualizedContainerService.HintSize="725,637" sap2010:WorkflowViewState.IdRef="If_4">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">!File.Exists(Path.Combine(dicConfig["RutaParametrizacion"].ToString(),dicConfig["fileTablaEquivalencias"].ToString()))</mca:CSharpValue>
                  </InArgument>
                </If.Condition>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="376,477" sap2010:WorkflowViewState.IdRef="Sequence_22">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence sap:VirtualizedContainerService.HintSize="334,152" sap2010:WorkflowViewState.IdRef="Sequence_8">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_19">boolTableEquivalence</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Error">
                      <ui:LogMessage.Message>
                        <InArgument x:TypeArguments="x:Object">
                          <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_53">"The " + Path.Combine(dicConfig["RutaParametrizacion"].ToString(),dicConfig["fileTablaEquivalencias"].ToString()) + " file don't exists"</mca:CSharpValue>
                        </InArgument>
                      </ui:LogMessage.Message>
                    </ui:LogMessage>
                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_34">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">
                          <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_70">Exception</mca:CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">
                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_130">"The " + Path.Combine(dicConfig["RutaParametrizacion"].ToString(),dicConfig["fileTablaEquivalencias"].ToString()) + " file don't exists"</mca:CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_9">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">
                          <mca:CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_20">boolTableEquivalence</mca:CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="771,22" sap2010:WorkflowViewState.IdRef="Catch`1_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="s:Exception">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                </ActivityAction.Argument>
                <Sequence sap:VirtualizedContainerService.HintSize="376,283" sap2010:WorkflowViewState.IdRef="Sequence_21">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Error">
                    <ui:LogMessage.Message>
                      <InArgument x:TypeArguments="x:Object">
                        <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">"The Robot could not validate if the inputs exists"</mca:CSharpValue>
                      </InArgument>
                    </ui:LogMessage.Message>
                  </ui:LogMessage>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_31">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">
                        <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_71">Exception</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_131">exception.ToString()</mca:CSharpValue>
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
        </TryCatch>
      </State.Entry>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">703,129.5</av:Point>
          <av:Size x:Key="ShapeSize">178,119</av:Size>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Double x:Key="StateContainerWidth">143.71413846521887</x:Double>
          <x:Double x:Key="StateContainerHeight">82.798445858315475</x:Double>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <State.Transitions>
        <Transition DisplayName="2.Tabla equivalencias" sap:VirtualizedContainerService.HintSize="454,512" sap2010:WorkflowViewState.IdRef="Transition_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">747.5,247.5 747.5,277.5 640,277.5 640,352.5</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">19</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.Condition>
            <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_155">boolTableEquivalence == true &amp;&amp; string.IsNullOrEmpty(Exception)</mca:CSharpValue>
          </Transition.Condition>
          <Transition.To>
            <State x:Name="__ReferenceID0" DisplayName="2.Tabla equivalencias" sap:VirtualizedContainerService.HintSize="172,95" sap2010:WorkflowViewState.IdRef="State_3">
              <State.Entry>
                <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="438,668" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                  <TryCatch.Try>
                    <Sequence sap:VirtualizedContainerService.HintSize="376,441" sap2010:WorkflowViewState.IdRef="Sequence_27">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:DatabaseConnect DisplayName="Connect to Excel File" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="DatabaseConnect_3" ProviderName="System.Data.OleDb">
                        <ui:DatabaseConnect.ConnectionString>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_79">dicConfig["ConnectionStringFirstPart"].ToString()+Path.Combine(dicConfig["RutaParametrizacion"].ToString(),dicConfig["fileTablaEquivalencias"].ToString())+dicConfig["ConnectionStringSecondPart"].ToString()</mca:CSharpValue>
                          </InArgument>
                        </ui:DatabaseConnect.ConnectionString>
                        <ui:DatabaseConnect.DatabaseConnection>
                          <OutArgument x:TypeArguments="ui:DatabaseConnection">
                            <mca:CSharpReference x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpReference`1_49">dbConnection</mca:CSharpReference>
                          </OutArgument>
                        </ui:DatabaseConnect.DatabaseConnection>
                      </ui:DatabaseConnect>
                      <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Run Insert Data to &quot;Otros Depositos&quot;" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_2">
                        <ui:ExecuteQuery.DataTable>
                          <OutArgument x:TypeArguments="sd:DataTable">
                            <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_57">dtTablaEquivalencias</mca:CSharpReference>
                          </OutArgument>
                        </ui:ExecuteQuery.DataTable>
                        <ui:ExecuteQuery.ExistingDbConnection>
                          <InArgument x:TypeArguments="ui:DatabaseConnection">
                            <mca:CSharpValue x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_76">dbConnection</mca:CSharpValue>
                          </InArgument>
                        </ui:ExecuteQuery.ExistingDbConnection>
                        <ui:ExecuteQuery.Parameters>
                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                        </ui:ExecuteQuery.Parameters>
                        <ui:ExecuteQuery.Sql>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_77">dicConfig["QueryReadFiles"].ToString()</mca:CSharpValue>
                          </InArgument>
                        </ui:ExecuteQuery.Sql>
                      </ui:ExecuteQuery>
                      <ui:DatabaseDisconnect DisplayName="Disconnect from database" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="DatabaseDisconnect_2">
                        <ui:DatabaseDisconnect.DatabaseConnection>
                          <InArgument x:TypeArguments="ui:DatabaseConnection">
                            <mca:CSharpValue x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_78">dbConnection</mca:CSharpValue>
                          </InArgument>
                        </ui:DatabaseDisconnect.DatabaseConnection>
                      </ui:DatabaseDisconnect>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_74">Exception</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_134">null</mca:CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <Sequence sap:VirtualizedContainerService.HintSize="346,244" sap2010:WorkflowViewState.IdRef="Sequence_16">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_15">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_75">Exception</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_135">exception.ToString()</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
              </State.Entry>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">554,352.5</av:Point>
                  <av:Size x:Key="ShapeSize">172,95</av:Size>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Double x:Key="StateContainerWidth">137.95268618530372</x:Double>
                  <x:Double x:Key="StateContainerHeight">59.272316820771522</x:Double>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <State.Transitions>
                <Transition DisplayName="2.Error Handle" sap:VirtualizedContainerService.HintSize="653,512" sap2010:WorkflowViewState.IdRef="Transition_11">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">597,447.5 597,524.172403665051 524,524.172403665051 524,438 554,438</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">19</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">69</x:Int32>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID0</x:Reference>
                  </Transition.To>
                  <Transition.Action>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">
                          <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_33">intCountTry</mca:CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">
                          <mca:CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_42">intCountTry + 1</mca:CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                  </Transition.Action>
                  <Transition.Condition>
                    <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_152">intCountTry &lt;= Int32.Parse(dicConfig["TryErrorNumber"].ToString()) &amp;&amp; !string.IsNullOrEmpty(Exception)</mca:CSharpValue>
                  </Transition.Condition>
                </Transition>
                <Transition DisplayName="T1" sap:VirtualizedContainerService.HintSize="450,514" sap2010:WorkflowViewState.IdRef="Transition_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">726,395.25 756,395.25 756,395.3 872,395.3</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">32</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">33</x:Int32>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <State x:Name="__ReferenceID1" DisplayName="3.InputPeopleSoft" sap:VirtualizedContainerService.HintSize="176,94" sap2010:WorkflowViewState.IdRef="State_5">
                      <State.Entry>
                        <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="977,1836" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                          <TryCatch.Try>
                            <Sequence sap:VirtualizedContainerService.HintSize="939,1604" sap2010:WorkflowViewState.IdRef="Sequence_28">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="897,146" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke PeopleSoft_Login workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="NavigationApps\\PeopleSoft_Login.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrPass">
                                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_94">dicConfig["PasswordPeopleSoft"].ToString()</mca:CSharpValue>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrUser">
                                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_95">dicConfig["UserPeopleSpft"].ToString()</mca:CSharpValue>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrUrlOracle">
                                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_96">dicConfig["linkPeopleSoft"].ToString()</mca:CSharpValue>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_CarpetaPantallazos">
                                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_97">dicConfig["RutaArchivosGenerados"].ToString()</mca:CSharpValue>
                                        </InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke PeopleSoft_NavVisorConsultas workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="NavigationApps\\PeopleSoft_NavVisorConsultas.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_UrlInicial">
                                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_99">dicConfig["urlInicial"].ToString()</mca:CSharpValue>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_UrlVisorConsultas">
                                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_98">dicConfig["urlVisorConsultas"].ToString()</mca:CSharpValue>
                                        </InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke PeopleSoft_DescargarDetalleCuenta workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="NavigationApps\\PeopleSoft_DescargarDetalleCuenta.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_Busqueda">
                                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_100">dicConfig["Busqueda"].ToString()</mca:CSharpValue>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_UnidadNegocioParametrico">
                                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_101">dicConfig["UnidadDeNegocio"].ToString()</mca:CSharpValue>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:Int32" x:Key="in_TiempoEsperaMax">
                                          <mca:CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_102">Int32.Parse(dicConfig["tiempoMaxEspera"].ToString())</mca:CSharpValue>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_RutaDescarga">
                                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_103">dicConfig["RutaArchivosRecibidos"].ToString()</mca:CSharpValue>
                                        </InArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_Archivo">
                                          <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_60">strPathDownloadFile</mca:CSharpReference>
                                        </OutArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </Sequence>
                                </ui:CommentOut.Body>
                              </ui:CommentOut>
                              <Assign sap:VirtualizedContainerService.HintSize="897,60" sap2010:WorkflowViewState.IdRef="Assign_45">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_83">strPathDownloadFile</mca:CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_158">Path.Combine(dicConfig["RutaArchivosRecibidos"].ToString(),"DD"+DateTime.Now.ToString("ddMMyyy")+".xlsx")</mca:CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <If DisplayName="If Validate if PeopleSoft file exists" sap:VirtualizedContainerService.HintSize="897,1126" sap2010:WorkflowViewState.IdRef="If_6">
                                <If.Condition>
                                  <InArgument x:TypeArguments="x:Boolean">
                                    <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_104">File.Exists(strPathDownloadFile)</mca:CSharpValue>
                                  </InArgument>
                                </If.Condition>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="476,966" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:DatabaseConnect DisplayName="Connect to Excel File" sap:VirtualizedContainerService.HintSize="434,59" sap2010:WorkflowViewState.IdRef="DatabaseConnect_5" ProviderName="System.Data.OleDb">
                                      <ui:DatabaseConnect.ConnectionString>
                                        <InArgument x:TypeArguments="x:String">
                                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_105">dicConfig["ConnectionStringFirstPart"].ToString()+strPathDownloadFile+dicConfig["ConnectionStringSecondPart"].ToString()</mca:CSharpValue>
                                        </InArgument>
                                      </ui:DatabaseConnect.ConnectionString>
                                      <ui:DatabaseConnect.DatabaseConnection>
                                        <OutArgument x:TypeArguments="ui:DatabaseConnection">
                                          <mca:CSharpReference x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpReference`1_54">dbConnection</mca:CSharpReference>
                                        </OutArgument>
                                      </ui:DatabaseConnect.DatabaseConnection>
                                    </ui:DatabaseConnect>
                                    <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Run Insert Data to &quot;Otros Depositos&quot;" sap:VirtualizedContainerService.HintSize="434,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_4">
                                      <ui:ExecuteQuery.DataTable>
                                        <OutArgument x:TypeArguments="sd:DataTable">
                                          <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_59">dtInputPeopleSoft</mca:CSharpReference>
                                        </OutArgument>
                                      </ui:ExecuteQuery.DataTable>
                                      <ui:ExecuteQuery.ExistingDbConnection>
                                        <InArgument x:TypeArguments="ui:DatabaseConnection">
                                          <mca:CSharpValue x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_87">dbConnection</mca:CSharpValue>
                                        </InArgument>
                                      </ui:ExecuteQuery.ExistingDbConnection>
                                      <ui:ExecuteQuery.Parameters>
                                        <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                      </ui:ExecuteQuery.Parameters>
                                      <ui:ExecuteQuery.Sql>
                                        <InArgument x:TypeArguments="x:String">
                                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_88">dicConfig["QueryReadFiles"].ToString()</mca:CSharpValue>
                                        </InArgument>
                                      </ui:ExecuteQuery.Sql>
                                    </ui:ExecuteQuery>
                                    <ui:DatabaseDisconnect DisplayName="Disconnect from database" sap:VirtualizedContainerService.HintSize="434,22" sap2010:WorkflowViewState.IdRef="DatabaseDisconnect_4">
                                      <ui:DatabaseDisconnect.DatabaseConnection>
                                        <InArgument x:TypeArguments="ui:DatabaseConnection">
                                          <mca:CSharpValue x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_89">dbConnection</mca:CSharpValue>
                                        </InArgument>
                                      </ui:DatabaseDisconnect.DatabaseConnection>
                                    </ui:DatabaseDisconnect>
                                    <ui:DatabaseConnect DisplayName="Connect to SQL Server" sap:VirtualizedContainerService.HintSize="434,59" sap2010:WorkflowViewState.IdRef="DatabaseConnect_6" ProviderName="System.Data.SqlClient">
                                      <ui:DatabaseConnect.ConnectionString>
                                        <InArgument x:TypeArguments="x:String">
                                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_245">"Data Source="+dicConfig["ServerName"].ToString()+";Initial Catalog="+dicConfig["DatabaseName"].ToString()+";Persist Security Info=True;User ID="+strUserDatabase+";Password="+strPasswordDatabase</mca:CSharpValue>
                                        </InArgument>
                                      </ui:DatabaseConnect.ConnectionString>
                                      <ui:DatabaseConnect.DatabaseConnection>
                                        <OutArgument x:TypeArguments="ui:DatabaseConnection">
                                          <mca:CSharpReference x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpReference`1_98">dbConnection</mca:CSharpReference>
                                        </OutArgument>
                                      </ui:DatabaseConnect.DatabaseConnection>
                                    </ui:DatabaseConnect>
                                    <ui:ExecuteQuery ContinueOnError="{x:Null}" DataTable="{x:Null}" TimeoutMS="{x:Null}" CommandType="StoredProcedure" DisplayName="Run query" sap:VirtualizedContainerService.HintSize="434,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_7" Sql="sp_DeleteIputData">
                                      <ui:ExecuteQuery.ExistingDbConnection>
                                        <InArgument x:TypeArguments="ui:DatabaseConnection">
                                          <mca:CSharpValue x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_329">dbConnection</mca:CSharpValue>
                                        </InArgument>
                                      </ui:ExecuteQuery.ExistingDbConnection>
                                      <ui:ExecuteQuery.Parameters>
                                        <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                      </ui:ExecuteQuery.Parameters>
                                    </ui:ExecuteQuery>
                                    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="434,296" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                                      <ui:ForEachRow.Body>
                                        <ActivityAction x:TypeArguments="sd:DataRow">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,180" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExecuteQuery ContinueOnError="{x:Null}" DataTable="{x:Null}" TimeoutMS="{x:Null}" CommandType="StoredProcedure" DisplayName="Run query" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_6" Sql="sp_InsertInputData">
                                              <ui:ExecuteQuery.ExistingDbConnection>
                                                <InArgument x:TypeArguments="ui:DatabaseConnection">
                                                  <mca:CSharpValue x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_332">dbConnection</mca:CSharpValue>
                                                </InArgument>
                                              </ui:ExecuteQuery.ExistingDbConnection>
                                              <ui:ExecuteQuery.Parameters>
                                                <InArgument x:TypeArguments="x:String" x:Key="@CIA">
                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_271">CurrentRow[0].ToString()</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="@ID_Cliente">
                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_270">CurrentRow[1].ToString()</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="@Razon_Social">
                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_269">CurrentRow[2].ToString()</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:Double" x:Key="@Cr_Limit">
                                                  <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_268">Double.Parse(CurrentRow[3].ToString())</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="@Serie">
                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_267">CurrentRow[4].ToString()</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="@Folio">
                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_266">CurrentRow[5].ToString()</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="s:DateTime" x:Key="@Fecha_Factura">
                                                  <mca:CSharpValue x:TypeArguments="s:DateTime" sap2010:WorkflowViewState.IdRef="CSharpValue`1_265">Convert.ToDateTime(CurrentRow[6].ToString())</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:Double" x:Key="@Importe_Orig">
                                                  <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_264">Double.Parse(CurrentRow[7].ToString())</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:Double" x:Key="@Porcentaje_IVA">
                                                  <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_263">Double.Parse(CurrentRow[8].ToString())</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:Double" x:Key="@Base_IVA">
                                                  <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_262">Double.Parse(CurrentRow[9].ToString())</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:Double" x:Key="@Importe_IVA">
                                                  <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_261">Double.Parse(CurrentRow[10].ToString())</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:Double" x:Key="@IVA_por_Cobrar">
                                                  <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_260">Double.Parse(CurrentRow[11].ToString())</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:Double" x:Key="@IVA_Retenido">
                                                  <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_272">Double.Parse(CurrentRow[12].ToString())</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="@Porcentaje_IVA_Retenido">
                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_273">CurrentRow[13].ToString()</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:Double" x:Key="@Retencion_ISN">
                                                  <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_274">Double.Parse(CurrentRow[14].ToString())</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:Double" x:Key="@Total_Retenciones">
                                                  <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_275">Double.Parse(CurrentRow[15].ToString())</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:Double" x:Key="@Saldo">
                                                  <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_276">Double.Parse(CurrentRow[16].ToString())</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:Int32" x:Key="@Dias">
                                                  <mca:CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_277">Int32.Parse(CurrentRow[17].ToString())</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="s:DateTime" x:Key="@Fecha_Vencimiento">
                                                  <mca:CSharpValue x:TypeArguments="s:DateTime" sap2010:WorkflowViewState.IdRef="CSharpValue`1_278">Convert.ToDateTime(CurrentRow[18].ToString())</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="@Condiciones_Pago">
                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_279">CurrentRow[19].ToString()</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="@Coordinador">
                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_280">CurrentRow[20].ToString()</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="@Analista">
                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_281">CurrentRow[21].ToString()</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="@Facturador">
                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_282">CurrentRow[22].ToString()</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="@Descr">
                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_283">CurrentRow[23].ToString()</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="@Centro_Costo">
                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_284">CurrentRow[24].ToString()</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="@Unidad_Negocios">
                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_285">CurrentRow[25].ToString()</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="@Orden_Trabajo_WO">
                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_286">CurrentRow[26].ToString()</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="@Producto">
                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_287">CurrentRow[27].ToString()</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:Int32" x:Key="@Fecha_Corte">
                                                  <mca:CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_288">Int32.Parse(CurrentRow[28].ToString())</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="@Factura_Ajustar">
                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_289">CurrentRow[29].ToString()</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="@Documento_SAT">
                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_290">CurrentRow[30].ToString()</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="@UUID">
                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_291">CurrentRow[31].ToString()</mca:CSharpValue>
                                                </InArgument>
                                              </ui:ExecuteQuery.Parameters>
                                            </ui:ExecuteQuery>
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ForEachRow.Body>
                                      <ui:ForEachRow.DataTable>
                                        <InArgument x:TypeArguments="sd:DataTable">
                                          <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_259">dtInputPeopleSoft</mca:CSharpValue>
                                        </InArgument>
                                      </ui:ForEachRow.DataTable>
                                    </ui:ForEachRow>
                                    <ui:DatabaseDisconnect DisplayName="Disconnect from database" sap:VirtualizedContainerService.HintSize="434,22" sap2010:WorkflowViewState.IdRef="DatabaseDisconnect_5">
                                      <ui:DatabaseDisconnect.DatabaseConnection>
                                        <InArgument x:TypeArguments="ui:DatabaseConnection">
                                          <mca:CSharpValue x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_246">dbConnection</mca:CSharpValue>
                                        </InArgument>
                                      </ui:DatabaseDisconnect.DatabaseConnection>
                                    </ui:DatabaseDisconnect>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap:VirtualizedContainerService.HintSize="376,285" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Error">
                                      <ui:LogMessage.Message>
                                        <InArgument x:TypeArguments="x:Object">
                                          <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_113">"The " + strPathDownloadFile + " file don´t exists, validate why this file isn't in the path"</mca:CSharpValue>
                                        </InArgument>
                                      </ui:LogMessage.Message>
                                    </ui:LogMessage>
                                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_41">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">
                                          <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_78">Exception</mca:CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">
                                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_141">"The " + strPathDownloadFile + " file don´t exists, validate why this file isn't in the path"</mca:CSharpValue>
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <Assign sap:VirtualizedContainerService.HintSize="897,60" sap2010:WorkflowViewState.IdRef="Assign_40">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_79">Exception</mca:CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_142">null</mca:CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="943,22" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                </ActivityAction.Argument>
                                <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_80">Exception</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_143">exception.ToString()</mca:CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                      </State.Entry>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">872,353</av:Point>
                          <av:Size x:Key="ShapeSize">176,94</av:Size>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Double x:Key="StateContainerWidth">142.01690233297313</x:Double>
                          <x:Double x:Key="StateContainerHeight">57.870132879772768</x:Double>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <State.Transitions>
                        <Transition DisplayName="3.Error Handle" sap:VirtualizedContainerService.HintSize="659,505" sap2010:WorkflowViewState.IdRef="Transition_9">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:PointCollection x:Key="ConnectorLocation">917,447 917,531.100407981414 829.316794423902,531.100407981414 829.316794423902,432.9 872,432.9</av:PointCollection>
                              <x:Int32 x:Key="SrcConnectionPointIndex">19</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">65</x:Int32>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.To>
                            <x:Reference>__ReferenceID1</x:Reference>
                          </Transition.To>
                          <Transition.Action>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">
                                  <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_31">intCountTry</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">
                                  <mca:CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_40">intCountTry + 1</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </Transition.Action>
                          <Transition.Condition>
                            <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_147">intCountTry &lt;= Int32.Parse(dicConfig["TryErrorNumber"].ToString()) &amp;&amp; !string.IsNullOrEmpty(Exception)</mca:CSharpValue>
                          </Transition.Condition>
                        </Transition>
                        <Transition DisplayName="T6" sap:VirtualizedContainerService.HintSize="1155,505" sap2010:WorkflowViewState.IdRef="Transition_14">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:PointCollection x:Key="ConnectorLocation">1048,404.7 1078,404.7 1078,404.6 1202,404.6</av:PointCollection>
                              <x:Int32 x:Key="SrcConnectionPointIndex">40</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">41</x:Int32>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.To>
                            <State x:Name="__ReferenceID2" DisplayName="4.UpdateLog" sap:VirtualizedContainerService.HintSize="176,92" sap2010:WorkflowViewState.IdRef="State_4">
                              <State.Entry>
                                <Sequence sap:VirtualizedContainerService.HintSize="556,967" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="514,875" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                                    <TryCatch.Try>
                                      <Sequence sap:VirtualizedContainerService.HintSize="476,648" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:DatabaseConnect DisplayName="Connect to SQL Server" sap:VirtualizedContainerService.HintSize="434,59" sap2010:WorkflowViewState.IdRef="DatabaseConnect_4" ProviderName="System.Data.SqlClient">
                                          <ui:DatabaseConnect.ConnectionString>
                                            <InArgument x:TypeArguments="x:String">
                                              <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_229">"Data Source="+dicConfig["ServerName"].ToString()+";Initial Catalog="+dicConfig["DatabaseName"].ToString()+";Persist Security Info=True;User ID="+strUserDatabase+";Password="+strPasswordDatabase</mca:CSharpValue>
                                            </InArgument>
                                          </ui:DatabaseConnect.ConnectionString>
                                          <ui:DatabaseConnect.DatabaseConnection>
                                            <OutArgument x:TypeArguments="ui:DatabaseConnection">
                                              <mca:CSharpReference x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpReference`1_51">dbConnection</mca:CSharpReference>
                                            </OutArgument>
                                          </ui:DatabaseConnect.DatabaseConnection>
                                        </ui:DatabaseConnect>
                                        <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="434,295" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                                          <ui:ForEachRow.Body>
                                            <ActivityAction x:TypeArguments="sd:DataRow">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                                              </ActivityAction.Argument>
                                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,180" sap2010:WorkflowViewState.IdRef="Sequence_37">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:ExecuteQuery ContinueOnError="{x:Null}" DataTable="{x:Null}" TimeoutMS="{x:Null}" CommandType="StoredProcedure" DisplayName="Run query" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_5" Sql="sp_InsertLogData">
                                                  <ui:ExecuteQuery.ExistingDbConnection>
                                                    <InArgument x:TypeArguments="ui:DatabaseConnection">
                                                      <mca:CSharpValue x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_330">dbConnection</mca:CSharpValue>
                                                    </InArgument>
                                                  </ui:ExecuteQuery.ExistingDbConnection>
                                                  <ui:ExecuteQuery.Parameters>
                                                    <InArgument x:TypeArguments="x:String" x:Key="@CIA">
                                                      <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_242">CurrentRow[0].ToString()</mca:CSharpValue>
                                                    </InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="@ID_Cliente">
                                                      <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_241">CurrentRow[1].ToString()</mca:CSharpValue>
                                                    </InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="@Razon_Social">
                                                      <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_240">CurrentRow[2].ToString()</mca:CSharpValue>
                                                    </InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="@Serie">
                                                      <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_239">CurrentRow[4].ToString()</mca:CSharpValue>
                                                    </InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="@Folio">
                                                      <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_238">CurrentRow[5].ToString()</mca:CSharpValue>
                                                    </InArgument>
                                                    <InArgument x:TypeArguments="s:DateTime" x:Key="@Fecha_Factura">
                                                      <mca:CSharpValue x:TypeArguments="s:DateTime" sap2010:WorkflowViewState.IdRef="CSharpValue`1_237">Convert.ToDateTime(CurrentRow[6].ToString())</mca:CSharpValue>
                                                    </InArgument>
                                                    <InArgument x:TypeArguments="x:Double" x:Key="@Importe_Orig">
                                                      <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_236">Double.Parse(CurrentRow[7].ToString())</mca:CSharpValue>
                                                    </InArgument>
                                                    <InArgument x:TypeArguments="x:Double" x:Key="@Base_IVA">
                                                      <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_235">Double.Parse(CurrentRow[9].ToString())</mca:CSharpValue>
                                                    </InArgument>
                                                    <InArgument x:TypeArguments="x:Double" x:Key="@Importe_IVA">
                                                      <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_234">Double.Parse(CurrentRow[10].ToString())</mca:CSharpValue>
                                                    </InArgument>
                                                    <InArgument x:TypeArguments="x:Double" x:Key="@Total_Retenciones">
                                                      <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_233">Double.Parse(CurrentRow[15].ToString())</mca:CSharpValue>
                                                    </InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="@Facturador">
                                                      <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_232">CurrentRow[22].ToString()</mca:CSharpValue>
                                                    </InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="@UUID">
                                                      <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_231">CurrentRow[31].ToString()</mca:CSharpValue>
                                                    </InArgument>
                                                  </ui:ExecuteQuery.Parameters>
                                                </ui:ExecuteQuery>
                                              </Sequence>
                                            </ActivityAction>
                                          </ui:ForEachRow.Body>
                                          <ui:ForEachRow.DataTable>
                                            <InArgument x:TypeArguments="sd:DataTable">
                                              <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_230">dtInputPeopleSoft</mca:CSharpValue>
                                            </InArgument>
                                          </ui:ForEachRow.DataTable>
                                        </ui:ForEachRow>
                                        <ui:DatabaseDisconnect DisplayName="Disconnect from database" sap:VirtualizedContainerService.HintSize="434,22" sap2010:WorkflowViewState.IdRef="DatabaseDisconnect_3">
                                          <ui:DatabaseDisconnect.DatabaseConnection>
                                            <InArgument x:TypeArguments="ui:DatabaseConnection">
                                              <mca:CSharpValue x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_83">dbConnection</mca:CSharpValue>
                                            </InArgument>
                                          </ui:DatabaseDisconnect.DatabaseConnection>
                                        </ui:DatabaseDisconnect>
                                        <Assign sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_39">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">
                                              <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_76">Exception</mca:CSharpReference>
                                            </OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">
                                              <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_138">null</mca:CSharpValue>
                                            </InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="480,21" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ActivityAction x:TypeArguments="s:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                          </ActivityAction.Argument>
                                          <Sequence sap:VirtualizedContainerService.HintSize="346,244" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">
                                                    <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_77">Exception</mca:CSharpReference>
                                                  </OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_139">exception.ToString()</mca:CSharpValue>
                                                  </InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </Sequence>
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                  </TryCatch>
                                </Sequence>
                              </State.Entry>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">1202,354</av:Point>
                                  <av:Size x:Key="ShapeSize">176,92</av:Size>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Double x:Key="StateContainerWidth">141.8063695446009</x:Double>
                                  <x:Double x:Key="StateContainerHeight">55.9692472523401</x:Double>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <State.Transitions>
                                <Transition DisplayName="4.Error Handle" sap:VirtualizedContainerService.HintSize="659,505" sap2010:WorkflowViewState.IdRef="Transition_10">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:PointCollection x:Key="ConnectorLocation">1254.8,446 1254.8,462.2 1172,462.2 1172,432.2 1202,432.2</av:PointCollection>
                                      <x:Int32 x:Key="SrcConnectionPointIndex">23</x:Int32>
                                      <x:Int32 x:Key="DestConnectionPointIndex">65</x:Int32>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Transition.To>
                                    <x:Reference>__ReferenceID2</x:Reference>
                                  </Transition.To>
                                  <Transition.Action>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">
                                          <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_32">intCountTry</mca:CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">
                                          <mca:CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_41">intCountTry + 1</mca:CSharpValue>
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Transition.Action>
                                  <Transition.Condition>
                                    <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_151">intCountTry &lt;= Int32.Parse(dicConfig["TryErrorNumber"].ToString()) &amp;&amp; !string.IsNullOrEmpty(Exception)</mca:CSharpValue>
                                  </Transition.Condition>
                                </Transition>
                                <Transition DisplayName="T4" sap:VirtualizedContainerService.HintSize="450,514" sap2010:WorkflowViewState.IdRef="Transition_6">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:PointCollection x:Key="ConnectorLocation">1378,409.2 1408,409.2 1408,409.5 1537.5,409.5</av:PointCollection>
                                      <x:Int32 x:Key="SrcConnectionPointIndex">44</x:Int32>
                                      <x:Int32 x:Key="DestConnectionPointIndex">45</x:Int32>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Transition.To>
                                    <State x:Name="__ReferenceID3" DisplayName="5.CombineLogInputPeopleSoft" sap:VirtualizedContainerService.HintSize="225,95" sap2010:WorkflowViewState.IdRef="State_8">
                                      <State.Entry>
                                        <Sequence sap:VirtualizedContainerService.HintSize="480,851" sap2010:WorkflowViewState.IdRef="Sequence_31">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="438,759" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                                            <TryCatch.Try>
                                              <Sequence sap:VirtualizedContainerService.HintSize="376,532" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                                <Sequence.Variables>
                                                  <Variable x:TypeArguments="s:DateTime" Name="datetimeFechaConsulta" />
                                                </Sequence.Variables>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                                                  <ui:CommentOut.Body>
                                                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="476,1065" sap2010:WorkflowViewState.IdRef="Sequence_39">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ui:FilterDataTable DisplayName="Filter Data Table" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="434,160" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" SelectColumnsMode="Keep">
                                                        <ui:FilterDataTable.DataTable>
                                                          <InArgument x:TypeArguments="sd:DataTable">
                                                            <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_161">dtReadLogFacturasIngresadas</mca:CSharpValue>
                                                          </InArgument>
                                                        </ui:FilterDataTable.DataTable>
                                                        <ui:FilterDataTable.Filters>
                                                          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                                            <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                                              <ui:FilterOperationArgument.Column>
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_162">"Status"</mca:CSharpValue>
                                                                </InArgument>
                                                              </ui:FilterOperationArgument.Column>
                                                              <ui:FilterOperationArgument.Operand>
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_163">"Enviado"</mca:CSharpValue>
                                                                </InArgument>
                                                              </ui:FilterOperationArgument.Operand>
                                                            </ui:FilterOperationArgument>
                                                            <ui:FilterOperationArgument BooleanOperator="And" Operator="NOTCONTAINS">
                                                              <ui:FilterOperationArgument.Column>
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_202">"Status"</mca:CSharpValue>
                                                                </InArgument>
                                                              </ui:FilterOperationArgument.Column>
                                                              <ui:FilterOperationArgument.Operand>
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_203">"No"</mca:CSharpValue>
                                                                </InArgument>
                                                              </ui:FilterOperationArgument.Operand>
                                                            </ui:FilterOperationArgument>
                                                          </scg:List>
                                                        </ui:FilterDataTable.Filters>
                                                        <ui:FilterDataTable.OutputDataTable>
                                                          <OutArgument x:TypeArguments="sd:DataTable">
                                                            <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_86">dtReadLogFacturasIngresadas</mca:CSharpReference>
                                                          </OutArgument>
                                                        </ui:FilterDataTable.OutputDataTable>
                                                        <ui:FilterDataTable.SelectColumns>
                                                          <scg:List x:TypeArguments="InArgument" Capacity="4">
                                                            <x:Null />
                                                          </scg:List>
                                                        </ui:FilterDataTable.SelectColumns>
                                                      </ui:FilterDataTable>
                                                      <ui:JoinDataTables DisplayName="Join Data Tables" sap:VirtualizedContainerService.HintSize="434,59" sap2010:WorkflowViewState.IdRef="JoinDataTables_2" JoinType="Inner">
                                                        <ui:JoinDataTables.Arguments>
                                                          <scg:List x:TypeArguments="ui:JoinOperationArgument" Capacity="16">
                                                            <ui:JoinOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EQ">
                                                              <ui:JoinOperationArgument.Column1>
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_294">dicConfig["a"].ToString()</mca:CSharpValue>
                                                                </InArgument>
                                                              </ui:JoinOperationArgument.Column1>
                                                              <ui:JoinOperationArgument.Column2>
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_295">dicConfig["a"].ToString()</mca:CSharpValue>
                                                                </InArgument>
                                                              </ui:JoinOperationArgument.Column2>
                                                            </ui:JoinOperationArgument>
                                                            <ui:JoinOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EQ">
                                                              <ui:JoinOperationArgument.Column1>
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_296">dicConfig["b"].ToString()</mca:CSharpValue>
                                                                </InArgument>
                                                              </ui:JoinOperationArgument.Column1>
                                                              <ui:JoinOperationArgument.Column2>
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_297">dicConfig["b"].ToString()</mca:CSharpValue>
                                                                </InArgument>
                                                              </ui:JoinOperationArgument.Column2>
                                                            </ui:JoinOperationArgument>
                                                            <ui:JoinOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EQ">
                                                              <ui:JoinOperationArgument.Column1>
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_298">dicConfig["c"].ToString()</mca:CSharpValue>
                                                                </InArgument>
                                                              </ui:JoinOperationArgument.Column1>
                                                              <ui:JoinOperationArgument.Column2>
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_299">dicConfig["c"].ToString()</mca:CSharpValue>
                                                                </InArgument>
                                                              </ui:JoinOperationArgument.Column2>
                                                            </ui:JoinOperationArgument>
                                                            <ui:JoinOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EQ">
                                                              <ui:JoinOperationArgument.Column1>
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_300">dicConfig["d"].ToString()</mca:CSharpValue>
                                                                </InArgument>
                                                              </ui:JoinOperationArgument.Column1>
                                                              <ui:JoinOperationArgument.Column2>
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_301">dicConfig["d"].ToString()</mca:CSharpValue>
                                                                </InArgument>
                                                              </ui:JoinOperationArgument.Column2>
                                                            </ui:JoinOperationArgument>
                                                            <ui:JoinOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EQ">
                                                              <ui:JoinOperationArgument.Column1>
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_302">dicConfig["e"].ToString()</mca:CSharpValue>
                                                                </InArgument>
                                                              </ui:JoinOperationArgument.Column1>
                                                              <ui:JoinOperationArgument.Column2>
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_303">dicConfig["e"].ToString()</mca:CSharpValue>
                                                                </InArgument>
                                                              </ui:JoinOperationArgument.Column2>
                                                            </ui:JoinOperationArgument>
                                                            <ui:JoinOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EQ">
                                                              <ui:JoinOperationArgument.Column1>
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_304">dicConfig["f"].ToString()</mca:CSharpValue>
                                                                </InArgument>
                                                              </ui:JoinOperationArgument.Column1>
                                                              <ui:JoinOperationArgument.Column2>
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_305">dicConfig["f"].ToString()</mca:CSharpValue>
                                                                </InArgument>
                                                              </ui:JoinOperationArgument.Column2>
                                                            </ui:JoinOperationArgument>
                                                            <ui:JoinOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EQ">
                                                              <ui:JoinOperationArgument.Column1>
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_306">dicConfig["g"].ToString()</mca:CSharpValue>
                                                                </InArgument>
                                                              </ui:JoinOperationArgument.Column1>
                                                              <ui:JoinOperationArgument.Column2>
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_307">dicConfig["g"].ToString()</mca:CSharpValue>
                                                                </InArgument>
                                                              </ui:JoinOperationArgument.Column2>
                                                            </ui:JoinOperationArgument>
                                                            <ui:JoinOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EQ">
                                                              <ui:JoinOperationArgument.Column1>
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_308">dicConfig["h"].ToString()</mca:CSharpValue>
                                                                </InArgument>
                                                              </ui:JoinOperationArgument.Column1>
                                                              <ui:JoinOperationArgument.Column2>
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_309">dicConfig["h"].ToString()</mca:CSharpValue>
                                                                </InArgument>
                                                              </ui:JoinOperationArgument.Column2>
                                                            </ui:JoinOperationArgument>
                                                            <ui:JoinOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EQ">
                                                              <ui:JoinOperationArgument.Column1>
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_310">dicConfig["i"].ToString()</mca:CSharpValue>
                                                                </InArgument>
                                                              </ui:JoinOperationArgument.Column1>
                                                              <ui:JoinOperationArgument.Column2>
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_311">dicConfig["i"].ToString()</mca:CSharpValue>
                                                                </InArgument>
                                                              </ui:JoinOperationArgument.Column2>
                                                            </ui:JoinOperationArgument>
                                                            <ui:JoinOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EQ">
                                                              <ui:JoinOperationArgument.Column1>
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_312">dicConfig["ColumnaJLog"].ToString()</mca:CSharpValue>
                                                                </InArgument>
                                                              </ui:JoinOperationArgument.Column1>
                                                              <ui:JoinOperationArgument.Column2>
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_313">dicConfig["j"].ToString()</mca:CSharpValue>
                                                                </InArgument>
                                                              </ui:JoinOperationArgument.Column2>
                                                            </ui:JoinOperationArgument>
                                                            <ui:JoinOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EQ">
                                                              <ui:JoinOperationArgument.Column1>
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_314">dicConfig["k"].ToString()</mca:CSharpValue>
                                                                </InArgument>
                                                              </ui:JoinOperationArgument.Column1>
                                                              <ui:JoinOperationArgument.Column2>
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_315">dicConfig["k"].ToString()</mca:CSharpValue>
                                                                </InArgument>
                                                              </ui:JoinOperationArgument.Column2>
                                                            </ui:JoinOperationArgument>
                                                            <ui:JoinOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EQ">
                                                              <ui:JoinOperationArgument.Column1>
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_316">dicConfig["l"].ToString()</mca:CSharpValue>
                                                                </InArgument>
                                                              </ui:JoinOperationArgument.Column1>
                                                              <ui:JoinOperationArgument.Column2>
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_317">dicConfig["l"].ToString()</mca:CSharpValue>
                                                                </InArgument>
                                                              </ui:JoinOperationArgument.Column2>
                                                            </ui:JoinOperationArgument>
                                                          </scg:List>
                                                        </ui:JoinDataTables.Arguments>
                                                        <ui:JoinDataTables.DataTable1>
                                                          <InArgument x:TypeArguments="sd:DataTable">
                                                            <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_292">dtReadLogFacturasIngresadas</mca:CSharpValue>
                                                          </InArgument>
                                                        </ui:JoinDataTables.DataTable1>
                                                        <ui:JoinDataTables.DataTable2>
                                                          <InArgument x:TypeArguments="sd:DataTable">
                                                            <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_293">dtInputPeopleSoft</mca:CSharpValue>
                                                          </InArgument>
                                                        </ui:JoinDataTables.DataTable2>
                                                        <ui:JoinDataTables.OutputDataTable>
                                                          <OutArgument x:TypeArguments="sd:DataTable">
                                                            <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_100">dtDataToProcess</mca:CSharpReference>
                                                          </OutArgument>
                                                        </ui:JoinDataTables.OutputDataTable>
                                                      </ui:JoinDataTables>
                                                      <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="434,400" sap2010:WorkflowViewState.IdRef="ForEach`1_8">
                                                        <ui:ForEach.Body>
                                                          <ActivityAction x:TypeArguments="x:Object">
                                                            <ActivityAction.Argument>
                                                              <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                            </ActivityAction.Argument>
                                                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,277" sap2010:WorkflowViewState.IdRef="Sequence_40">
                                                              <Sequence.Variables>
                                                                <Variable x:TypeArguments="x:Int32" Default="0" Name="intDeleteColumns" />
                                                              </Sequence.Variables>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <ui:RemoveDataColumn Column="{x:Null}" ColumnName="{x:Null}" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_2">
                                                                <ui:RemoveDataColumn.ColumnIndex>
                                                                  <InArgument x:TypeArguments="x:Int32">
                                                                    <mca:CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_318">intDeleteColumns</mca:CSharpValue>
                                                                  </InArgument>
                                                                </ui:RemoveDataColumn.ColumnIndex>
                                                                <ui:RemoveDataColumn.DataTable>
                                                                  <InOutArgument x:TypeArguments="sd:DataTable">
                                                                    <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_101">dtDataToProcess</mca:CSharpReference>
                                                                  </InOutArgument>
                                                                </ui:RemoveDataColumn.DataTable>
                                                              </ui:RemoveDataColumn>
                                                            </Sequence>
                                                          </ActivityAction>
                                                        </ui:ForEach.Body>
                                                        <ui:ForEach.Values>
                                                          <InArgument x:TypeArguments="sc:IEnumerable">
                                                            <mca:CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_319">Enumerable.Range(0,16)</mca:CSharpValue>
                                                          </InArgument>
                                                        </ui:ForEach.Values>
                                                      </ui:ForEach>
                                                      <ui:RemoveDuplicateRows DisplayName="Remove Duplicate Rows" sap:VirtualizedContainerService.HintSize="434,79" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_2">
                                                        <ui:RemoveDuplicateRows.DataTable>
                                                          <InArgument x:TypeArguments="sd:DataTable">
                                                            <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_320">dtDataToProcess</mca:CSharpValue>
                                                          </InArgument>
                                                        </ui:RemoveDuplicateRows.DataTable>
                                                        <ui:RemoveDuplicateRows.OutputDataTable>
                                                          <OutArgument x:TypeArguments="sd:DataTable">
                                                            <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_102">dtDataToProcess</mca:CSharpReference>
                                                          </OutArgument>
                                                        </ui:RemoveDuplicateRows.OutputDataTable>
                                                      </ui:RemoveDuplicateRows>
                                                      <ui:WriteRange AddHeaders="True" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="434,115" sap2010:WorkflowViewState.IdRef="WriteRange_4" StartingCell="A1">
                                                        <ui:WriteRange.DataTable>
                                                          <InArgument x:TypeArguments="sd:DataTable">
                                                            <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_321">dtDataToProcess</mca:CSharpValue>
                                                          </InArgument>
                                                        </ui:WriteRange.DataTable>
                                                        <ui:WriteRange.SheetName>
                                                          <InArgument x:TypeArguments="x:String">
                                                            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_322">dicConfig["SheetInputCombine"].ToString()</mca:CSharpValue>
                                                          </InArgument>
                                                        </ui:WriteRange.SheetName>
                                                        <ui:WriteRange.WorkbookPath>
                                                          <InArgument x:TypeArguments="x:String">
                                                            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_323">Path.Combine(dicConfig["RutaArchivosGenerados"].ToString(),dicConfig["CombineLogInputFile"].ToString())</mca:CSharpValue>
                                                          </InArgument>
                                                        </ui:WriteRange.WorkbookPath>
                                                      </ui:WriteRange>
                                                    </Sequence>
                                                  </ui:CommentOut.Body>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </ui:CommentOut>
                                                <ui:DatabaseConnect DisplayName="Connect to SQL Server" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="DatabaseConnect_7" ProviderName="System.Data.SqlClient">
                                                  <ui:DatabaseConnect.ConnectionString>
                                                    <InArgument x:TypeArguments="x:String">
                                                      <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_324">"Data Source="+dicConfig["ServerName"].ToString()+";Initial Catalog="+dicConfig["DatabaseName"].ToString()+";Persist Security Info=True;User ID="+strUserDatabase+";Password="+strPasswordDatabase</mca:CSharpValue>
                                                    </InArgument>
                                                  </ui:DatabaseConnect.ConnectionString>
                                                  <ui:DatabaseConnect.DatabaseConnection>
                                                    <OutArgument x:TypeArguments="ui:DatabaseConnection">
                                                      <mca:CSharpReference x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpReference`1_103">dbConnection</mca:CSharpReference>
                                                    </OutArgument>
                                                  </ui:DatabaseConnect.DatabaseConnection>
                                                </ui:DatabaseConnect>
                                                <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="StoredProcedure" DisplayName="Run query" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_8" Sql="sp_SelectProcessData">
                                                  <ui:ExecuteQuery.DataTable>
                                                    <OutArgument x:TypeArguments="sd:DataTable">
                                                      <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_110">dtDataToProcess</mca:CSharpReference>
                                                    </OutArgument>
                                                  </ui:ExecuteQuery.DataTable>
                                                  <ui:ExecuteQuery.ExistingDbConnection>
                                                    <InArgument x:TypeArguments="ui:DatabaseConnection">
                                                      <mca:CSharpValue x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_331">dbConnection</mca:CSharpValue>
                                                    </InArgument>
                                                  </ui:ExecuteQuery.ExistingDbConnection>
                                                  <ui:ExecuteQuery.Parameters>
                                                    <InArgument x:TypeArguments="s:DateTime" x:Key="@inDate">
                                                      <mca:CSharpValue x:TypeArguments="s:DateTime" sap2010:WorkflowViewState.IdRef="CSharpValue`1_328">DateTime.Now.AddDays(-30)</mca:CSharpValue>
                                                    </InArgument>
                                                  </ui:ExecuteQuery.Parameters>
                                                </ui:ExecuteQuery>
                                                <ui:DatabaseDisconnect DisplayName="Disconnect from database" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="DatabaseDisconnect_6">
                                                  <ui:DatabaseDisconnect.DatabaseConnection>
                                                    <InArgument x:TypeArguments="ui:DatabaseConnection">
                                                      <mca:CSharpValue x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_325">dbConnection</mca:CSharpValue>
                                                    </InArgument>
                                                  </ui:DatabaseDisconnect.DatabaseConnection>
                                                </ui:DatabaseDisconnect>
                                                <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_43">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">
                                                      <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_81">Exception</mca:CSharpReference>
                                                    </OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">
                                                      <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_145">null</mca:CSharpValue>
                                                    </InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </Sequence>
                                            </TryCatch.Try>
                                            <TryCatch.Catches>
                                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ActivityAction x:TypeArguments="s:Exception">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                  </ActivityAction.Argument>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_42">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">
                                                        <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_82">Exception</mca:CSharpReference>
                                                      </OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">
                                                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_146">exception.ToString()</mca:CSharpValue>
                                                      </InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </ActivityAction>
                                              </Catch>
                                            </TryCatch.Catches>
                                          </TryCatch>
                                        </Sequence>
                                      </State.Entry>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <av:Point x:Key="ShapeLocation">1537.5,352.5</av:Point>
                                          <av:Size x:Key="ShapeSize">225,95</av:Size>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Double x:Key="StateContainerWidth">191.29494383399788</x:Double>
                                          <x:Double x:Key="StateContainerHeight">58.690391083526322</x:Double>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <State.Transitions>
                                        <Transition DisplayName="Final without error" sap:VirtualizedContainerService.HintSize="450,505" sap2010:WorkflowViewState.IdRef="Transition_8">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <av:PointCollection x:Key="ConnectorLocation">1762.5,404.75 1792.5,404.75 1792.5,170 1811,170</av:PointCollection>
                                              <x:Int32 x:Key="SrcConnectionPointIndex">40</x:Int32>
                                              <x:Int32 x:Key="DestConnectionPointIndex">37</x:Int32>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Transition.Condition>
                                            <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_148">string.IsNullOrEmpty(Exception)</mca:CSharpValue>
                                          </Transition.Condition>
                                          <Transition.To>
                                            <State x:Name="__ReferenceID6" DisplayName="Final State Without Error" sap:VirtualizedContainerService.HintSize="198,89" sap2010:WorkflowViewState.IdRef="State_6" IsFinal="True">
                                              <State.Entry>
                                                <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_46">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">
                                                        <mca:CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_89">boolValidationProcess</mca:CSharpReference>
                                                      </OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_53">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">
                                                        <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_111">strInitProcessError</mca:CSharpReference>
                                                      </OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">
                                                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_335">null</mca:CSharpValue>
                                                      </InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </State.Entry>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <av:Point x:Key="ShapeLocation">1811,125.5</av:Point>
                                                  <av:Size x:Key="ShapeSize">198,89</av:Size>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  <x:Double x:Key="StateContainerWidth">164.49950517430648</x:Double>
                                                  <x:Double x:Key="StateContainerHeight">52.719995080837293</x:Double>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </State>
                                          </Transition.To>
                                        </Transition>
                                        <Transition DisplayName="Final with error" sap:VirtualizedContainerService.HintSize="450,505" sap2010:WorkflowViewState.IdRef="Transition_13">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <av:PointCollection x:Key="ConnectorLocation">1762.5,438 1792.5,438 1792.5,635.3 1834.5,635.3</av:PointCollection>
                                              <x:Int32 x:Key="SrcConnectionPointIndex">68</x:Int32>
                                              <x:Int32 x:Key="DestConnectionPointIndex">49</x:Int32>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Transition.Condition>
                                            <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_204">!string.IsNullOrEmpty(Exception)</mca:CSharpValue>
                                          </Transition.Condition>
                                          <Transition.To>
                                            <State x:Name="__ReferenceID7" DisplayName="Final State with error" sap:VirtualizedContainerService.HintSize="191,102" sap2010:WorkflowViewState.IdRef="State_7" IsFinal="True">
                                              <State.Entry>
                                                <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_36">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_47">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">
                                                        <mca:CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_90">boolValidationProcess</mca:CSharpReference>
                                                      </OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_48">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">
                                                        <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_91">strInitProcessError</mca:CSharpReference>
                                                      </OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">
                                                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_205">Exception</mca:CSharpValue>
                                                      </InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </State.Entry>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <av:Point x:Key="ShapeLocation">1834.5,569</av:Point>
                                                  <av:Size x:Key="ShapeSize">191,102</av:Size>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  <x:Double x:Key="StateContainerWidth">157.47666493301631</x:Double>
                                                  <x:Double x:Key="StateContainerHeight">65.963286984192166</x:Double>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </State>
                                          </Transition.To>
                                        </Transition>
                                        <Transition DisplayName="5.Error Handle" sap:VirtualizedContainerService.HintSize="653,512" sap2010:WorkflowViewState.IdRef="Transition_15">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <av:PointCollection x:Key="ConnectorLocation">1559.7,447.5 1559.7,463.25 1507.5,463.25 1507.5,433.25 1537.5,433.25</av:PointCollection>
                                              <x:Int32 x:Key="SrcConnectionPointIndex">7</x:Int32>
                                              <x:Int32 x:Key="DestConnectionPointIndex">65</x:Int32>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Transition.To>
                                            <x:Reference>__ReferenceID3</x:Reference>
                                          </Transition.To>
                                          <Transition.Action>
                                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_37">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">
                                                  <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_45">intCountTry</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">
                                                  <mca:CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_68">intCountTry + 1</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Transition.Action>
                                          <Transition.Condition>
                                            <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_150">intCountTry &lt;= Int32.Parse(dicConfig["TryErrorNumber"].ToString()) &amp;&amp; !string.IsNullOrEmpty(Exception)</mca:CSharpValue>
                                          </Transition.Condition>
                                        </Transition>
                                      </State.Transitions>
                                    </State>
                                  </Transition.To>
                                  <Transition.Action>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">
                                          <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_30">intCountTry</mca:CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Transition.Action>
                                  <Transition.Condition>
                                    <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_140">string.IsNullOrEmpty(Exception)</mca:CSharpValue>
                                  </Transition.Condition>
                                </Transition>
                              </State.Transitions>
                            </State>
                          </Transition.To>
                          <Transition.Action>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_36">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">
                                  <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_44">intCountTry</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">0</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Transition.Action>
                          <Transition.Condition>
                            <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_144">string.IsNullOrEmpty(Exception) &amp;&amp; File.Exists(Path.Combine(dicConfig["RutaArchivosGenerados"].ToString(),dicConfig["CombineLogInputFile"].ToString())) &amp;&amp; fileLogCombineInfo.Length &lt; 100000</mca:CSharpValue>
                          </Transition.Condition>
                        </Transition>
                      </State.Transitions>
                    </State>
                  </Transition.To>
                  <Transition.Action>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">
                          <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_29">intCountTry</mca:CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">0</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Transition.Action>
                  <Transition.Condition>
                    <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_137">string.IsNullOrEmpty(Exception)</mca:CSharpValue>
                  </Transition.Condition>
                </Transition>
              </State.Transitions>
            </State>
          </Transition.To>
        </Transition>
        <Transition DisplayName="3.InputPeopleSoft" sap:VirtualizedContainerService.HintSize="451,505" sap2010:WorkflowViewState.IdRef="Transition_7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">845.4,247.5 845.4,277.5 977.6,277.5 977.6,353</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">63</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">46</x:Int32>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <x:Reference>__ReferenceID1</x:Reference>
          </Transition.To>
          <Transition.Condition>
            <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_157">boolPeopleSoftInput == true &amp;&amp; string.IsNullOrEmpty(Exception)</mca:CSharpValue>
          </Transition.Condition>
        </Transition>
        <Transition DisplayName="4.ReadLog" sap:VirtualizedContainerService.HintSize="466,505" sap2010:WorkflowViewState.IdRef="Transition_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">881,182.6 1298.8,182.6 1298.8,354</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">32</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">42</x:Int32>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <x:Reference>__ReferenceID2</x:Reference>
          </Transition.To>
          <Transition.Condition>
            <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_156">boolCopyLogExecution == true &amp;&amp; string.IsNullOrEmpty(Exception)</mca:CSharpValue>
          </Transition.Condition>
        </Transition>
        <Transition DisplayName="1.Maestro clientes" sap:VirtualizedContainerService.HintSize="452,512" sap2010:WorkflowViewState.IdRef="Transition_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">703,218 371.4,218 371.4,352</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">57</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">34</x:Int32>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.Condition>
            <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_154">boolMasterCustomer == true &amp;&amp; string.IsNullOrEmpty(Exception)</mca:CSharpValue>
          </Transition.Condition>
          <Transition.To>
            <State x:Name="__ReferenceID4" DisplayName="1.Maestro clientes" sap:VirtualizedContainerService.HintSize="172,96" sap2010:WorkflowViewState.IdRef="State_2">
              <State.Entry>
                <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="438,673" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                  <TryCatch.Try>
                    <Sequence sap:VirtualizedContainerService.HintSize="376,441" sap2010:WorkflowViewState.IdRef="Sequence_26">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:DatabaseConnect DisplayName="Connect to Excel File" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="DatabaseConnect_2" ProviderName="System.Data.OleDb">
                        <ui:DatabaseConnect.ConnectionString>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_70">dicConfig["ConnectionStringFirstPart"].ToString()+Path.Combine(dicConfig["RutaParametrizacion"].ToString(),dicConfig["fileMaestroClientes"].ToString())+dicConfig["ConnectionStringSecondPart"].ToString()</mca:CSharpValue>
                          </InArgument>
                        </ui:DatabaseConnect.ConnectionString>
                        <ui:DatabaseConnect.DatabaseConnection>
                          <OutArgument x:TypeArguments="ui:DatabaseConnection">
                            <mca:CSharpReference x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpReference`1_46">dbConnection</mca:CSharpReference>
                          </OutArgument>
                        </ui:DatabaseConnect.DatabaseConnection>
                      </ui:DatabaseConnect>
                      <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Run Insert Data to &quot;Otros Depositos&quot;" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1">
                        <ui:ExecuteQuery.DataTable>
                          <OutArgument x:TypeArguments="sd:DataTable">
                            <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_47">dtMaestroClientes</mca:CSharpReference>
                          </OutArgument>
                        </ui:ExecuteQuery.DataTable>
                        <ui:ExecuteQuery.ExistingDbConnection>
                          <InArgument x:TypeArguments="ui:DatabaseConnection">
                            <mca:CSharpValue x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_71">dbConnection</mca:CSharpValue>
                          </InArgument>
                        </ui:ExecuteQuery.ExistingDbConnection>
                        <ui:ExecuteQuery.Parameters>
                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                        </ui:ExecuteQuery.Parameters>
                        <ui:ExecuteQuery.Sql>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_72">dicConfig["QueryReadFiles"].ToString()</mca:CSharpValue>
                          </InArgument>
                        </ui:ExecuteQuery.Sql>
                      </ui:ExecuteQuery>
                      <ui:DatabaseDisconnect DisplayName="Disconnect from database" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="DatabaseDisconnect_1">
                        <ui:DatabaseDisconnect.DatabaseConnection>
                          <InArgument x:TypeArguments="ui:DatabaseConnection">
                            <mca:CSharpValue x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_73">dbConnection</mca:CSharpValue>
                          </InArgument>
                        </ui:DatabaseDisconnect.DatabaseConnection>
                      </ui:DatabaseDisconnect>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_38">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_72">Exception</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_132">null</mca:CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,22" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_14">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">
                                <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_73">Exception</mca:CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">
                                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_133">exception.ToString()</mca:CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
              </State.Entry>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">294,352</av:Point>
                  <av:Size x:Key="ShapeSize">172,96</av:Size>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Double x:Key="StateContainerWidth">137.79777511303513</x:Double>
                  <x:Double x:Key="StateContainerHeight">60.229616472265377</x:Double>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <State.Transitions>
                <Transition DisplayName="T3" sap:VirtualizedContainerService.HintSize="450,512" sap2010:WorkflowViewState.IdRef="Transition_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">466,414.4 496,414.4 496,414.25 554,414.25</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">48</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">49</x:Int32>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID0</x:Reference>
                  </Transition.To>
                  <Transition.Action>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">
                          <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_28">intCountTry</mca:CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">0</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Transition.Action>
                  <Transition.Condition>
                    <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_136">string.IsNullOrEmpty(Exception)</mca:CSharpValue>
                  </Transition.Condition>
                </Transition>
                <Transition DisplayName="1.Error Handle" sap:VirtualizedContainerService.HintSize="653,512" sap2010:WorkflowViewState.IdRef="Transition_12">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">328.4,448 328.4,518.273694683819 264,518.273694683819 264,424 294,424</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">15</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">57</x:Int32>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID4</x:Reference>
                  </Transition.To>
                  <Transition.Action>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">
                          <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_34">intCountTry</mca:CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">
                          <mca:CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_43">intCountTry + 1</mca:CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                  </Transition.Action>
                  <Transition.Condition>
                    <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_153">intCountTry &lt;= Int32.Parse(dicConfig["TryErrorNumber"].ToString()) &amp;&amp; !string.IsNullOrEmpty(Exception)</mca:CSharpValue>
                  </Transition.Condition>
                </Transition>
              </State.Transitions>
            </State>
          </Transition.To>
        </Transition>
        <Transition DisplayName="0.OC Compañias" sap:VirtualizedContainerService.HintSize="450,512" sap2010:WorkflowViewState.IdRef="Transition_18">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">703,153.3 100.8,153.3 100.8,347.5</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">13</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">34</x:Int32>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.Condition>
            <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_338">boolOCCompañias &amp;&amp; string.IsNullOrEmpty(Exception)</mca:CSharpValue>
          </Transition.Condition>
          <Transition.To>
            <State x:Name="__ReferenceID5" DisplayName="0.OC Compañias" sap:VirtualizedContainerService.HintSize="560,1551" sap2010:WorkflowViewState.IdRef="State_9">
              <State.Entry>
                <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="514,1164" sap2010:WorkflowViewState.IdRef="TryCatch_7">
                  <TryCatch.Try>
                    <Sequence sap:VirtualizedContainerService.HintSize="476,937" sap2010:WorkflowViewState.IdRef="Sequence_45">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="sd:DataTable" Name="dtOCCompañias" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:DatabaseConnect DisplayName="Connect to Excel File" sap:VirtualizedContainerService.HintSize="434,59" sap2010:WorkflowViewState.IdRef="DatabaseConnect_8" ProviderName="System.Data.OleDb">
                        <ui:DatabaseConnect.ConnectionString>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_349">dicConfig["ConnectionStringFirstPart"].ToString()+Path.Combine(dicConfig["PathOCCompañiasFile"].ToString(),dicConfig["NameOCCompañiasFile"].ToString())+dicConfig["ConnectionStringSecondPart"].ToString()</mca:CSharpValue>
                          </InArgument>
                        </ui:DatabaseConnect.ConnectionString>
                        <ui:DatabaseConnect.DatabaseConnection>
                          <OutArgument x:TypeArguments="ui:DatabaseConnection">
                            <mca:CSharpReference x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpReference`1_117">dbConnection</mca:CSharpReference>
                          </OutArgument>
                        </ui:DatabaseConnect.DatabaseConnection>
                      </ui:DatabaseConnect>
                      <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Run Read data from " sap:VirtualizedContainerService.HintSize="434,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_9">
                        <ui:ExecuteQuery.DataTable>
                          <OutArgument x:TypeArguments="sd:DataTable">
                            <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_121">dtOCCompañias</mca:CSharpReference>
                          </OutArgument>
                        </ui:ExecuteQuery.DataTable>
                        <ui:ExecuteQuery.ExistingDbConnection>
                          <InArgument x:TypeArguments="ui:DatabaseConnection">
                            <mca:CSharpValue x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_344">dbConnection</mca:CSharpValue>
                          </InArgument>
                        </ui:ExecuteQuery.ExistingDbConnection>
                        <ui:ExecuteQuery.Parameters>
                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                        </ui:ExecuteQuery.Parameters>
                        <ui:ExecuteQuery.Sql>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_345">dicConfig["QueryReadFiles"].ToString()</mca:CSharpValue>
                          </InArgument>
                        </ui:ExecuteQuery.Sql>
                      </ui:ExecuteQuery>
                      <ui:DatabaseDisconnect DisplayName="Disconnect from database" sap:VirtualizedContainerService.HintSize="434,22" sap2010:WorkflowViewState.IdRef="DatabaseDisconnect_7">
                        <ui:DatabaseDisconnect.DatabaseConnection>
                          <InArgument x:TypeArguments="ui:DatabaseConnection">
                            <mca:CSharpValue x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_346">dbConnection</mca:CSharpValue>
                          </InArgument>
                        </ui:DatabaseDisconnect.DatabaseConnection>
                      </ui:DatabaseDisconnect>
                      <ui:DatabaseConnect DisplayName="Connect to SQL Server" sap:VirtualizedContainerService.HintSize="434,59" sap2010:WorkflowViewState.IdRef="DatabaseConnect_9" ProviderName="System.Data.SqlClient">
                        <ui:DatabaseConnect.ConnectionString>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_351">"Data Source="+dicConfig["ServerName"].ToString()+";Initial Catalog="+dicConfig["DatabaseName"].ToString()+";Persist Security Info=True;User ID="+strUserDatabase+";Password="+strPasswordDatabase</mca:CSharpValue>
                          </InArgument>
                        </ui:DatabaseConnect.ConnectionString>
                        <ui:DatabaseConnect.DatabaseConnection>
                          <OutArgument x:TypeArguments="ui:DatabaseConnection">
                            <mca:CSharpReference x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpReference`1_122">dbConnection</mca:CSharpReference>
                          </OutArgument>
                        </ui:DatabaseConnect.DatabaseConnection>
                      </ui:DatabaseConnect>
                      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="434,295" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
                        <ui:ForEachRow.Body>
                          <ActivityAction x:TypeArguments="sd:DataRow">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,180" sap2010:WorkflowViewState.IdRef="Sequence_47">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="StoredProcedure" DisplayName="Run query" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_10" Sql="sp_InsertOCCompañias">
                                <ui:ExecuteQuery.DataTable>
                                  <OutArgument x:TypeArguments="sd:DataTable">
                                    <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_123">dtDataToProcess</mca:CSharpReference>
                                  </OutArgument>
                                </ui:ExecuteQuery.DataTable>
                                <ui:ExecuteQuery.ExistingDbConnection>
                                  <InArgument x:TypeArguments="ui:DatabaseConnection">
                                    <mca:CSharpValue x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_352">dbConnection</mca:CSharpValue>
                                  </InArgument>
                                </ui:ExecuteQuery.ExistingDbConnection>
                                <ui:ExecuteQuery.Parameters>
                                  <InArgument x:TypeArguments="s:DateTime" x:Key="@Fecha_Diligenciamiento">
                                    <mca:CSharpValue x:TypeArguments="s:DateTime" sap2010:WorkflowViewState.IdRef="CSharpValue`1_355">Convert.ToDateTime(CurrentRow["Fecha de diligenciamiento"].ToString())</mca:CSharpValue>
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="@Cliente">
                                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_356">CurrentRow["Cliente"].ToString()</mca:CSharpValue>
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="@Orden_de_compra">
                                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_357">CurrentRow["Orden de compra"].ToString()</mca:CSharpValue>
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="@Numero_entrada_mercancia">
                                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_358">CurrentRow["Número de entrada de mercancía"].ToString()</mca:CSharpValue>
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="@Numero_Folio">
                                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_359">CurrentRow["Número de folio"].ToString()</mca:CSharpValue>
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="@Descripcion">
                                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_360">CurrentRow["Descripción"].ToString()</mca:CSharpValue>
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="@UUID">
                                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_361">CurrentRow["UUID"].ToString()</mca:CSharpValue>
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="@Fecha_Factura">
                                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_362">CurrentRow["Fecha factura"].ToString()</mca:CSharpValue>
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="@Clasificacion_Impuestos">
                                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_363">CurrentRow["Clasificación de impuestos"].ToString()</mca:CSharpValue>
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="@Subtotal">
                                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_364">CurrentRow["Subtotal"].ToString()</mca:CSharpValue>
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="@Impuestos">
                                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_365">CurrentRow["Impuestos"].ToString()</mca:CSharpValue>
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="@Total">
                                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_366">CurrentRow["Total"].ToString()</mca:CSharpValue>
                                  </InArgument>
                                </ui:ExecuteQuery.Parameters>
                              </ui:ExecuteQuery>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEachRow.Body>
                        <ui:ForEachRow.DataTable>
                          <InArgument x:TypeArguments="sd:DataTable">
                            <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_350">dtOCCompañias</mca:CSharpValue>
                          </InArgument>
                        </ui:ForEachRow.DataTable>
                      </ui:ForEachRow>
                      <ui:DatabaseDisconnect DisplayName="Disconnect from database" sap:VirtualizedContainerService.HintSize="434,22" sap2010:WorkflowViewState.IdRef="DatabaseDisconnect_8">
                        <ui:DatabaseDisconnect.DatabaseConnection>
                          <InArgument x:TypeArguments="ui:DatabaseConnection">
                            <mca:CSharpValue x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_354">dbConnection</mca:CSharpValue>
                          </InArgument>
                        </ui:DatabaseDisconnect.DatabaseConnection>
                      </ui:DatabaseDisconnect>
                      <Assign sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_59">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_119">Exception</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_347">null</mca:CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="480,21" sap2010:WorkflowViewState.IdRef="Catch`1_7">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_46">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_60">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">
                                <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_120">Exception</mca:CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">
                                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_348">exception.ToString()</mca:CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
              </State.Entry>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">18,347.5</av:Point>
                  <av:Size x:Key="ShapeSize">184,105</av:Size>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Double x:Key="StateContainerWidth">149.71697670229776</x:Double>
                  <x:Double x:Key="StateContainerHeight">69.069734783235162</x:Double>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <State.Transitions>
                <Transition DisplayName="T2" sap:VirtualizedContainerService.HintSize="450,512" sap2010:WorkflowViewState.IdRef="Transition_16">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">202,389.5 232,389.5 232,390.4 294,390.4</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">28</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">29</x:Int32>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID4</x:Reference>
                  </Transition.To>
                  <Transition.Action>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_56">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">
                          <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_114">intCountTry</mca:CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">0</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Transition.Action>
                  <Transition.Condition>
                    <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_339">string.IsNullOrEmpty(Exception)</mca:CSharpValue>
                  </Transition.Condition>
                </Transition>
                <Transition DisplayName="0. Error Handle" sap:VirtualizedContainerService.HintSize="653,512" sap2010:WorkflowViewState.IdRef="Transition_17">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">91.6,452.5 91.6,517.093952887573 0,517.093952887573 0,405.25 18,405.25</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">31</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">41</x:Int32>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID5</x:Reference>
                  </Transition.To>
                  <Transition.Action>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_57">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">
                          <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_115">intCountTry</mca:CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">
                          <mca:CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_340">intCountTry + 1</mca:CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                  </Transition.Action>
                  <Transition.Condition>
                    <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_341">intCountTry &lt;= Int32.Parse(dicConfig["TryErrorNumber"].ToString()) &amp;&amp; !string.IsNullOrEmpty(Exception)</mca:CSharpValue>
                  </Transition.Condition>
                </Transition>
              </State.Transitions>
            </State>
          </Transition.To>
        </Transition>
      </State.Transitions>
    </State>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <StateMachine.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="boolPeopleSoftInput">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_121">new bool()</mca:CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:Boolean" Name="boolCopyLogExecution">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_122">new bool()</mca:CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:Boolean" Name="boolMasterCustomer">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_123">new bool()</mca:CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:Boolean" Name="boolTableEquivalence">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_124">new bool()</mca:CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="si:FileInfo" Name="fileLogCombineInfo" />
      <Variable x:TypeArguments="x:String" Name="Exception" />
      <Variable x:TypeArguments="x:Int32" Name="intCountTry" />
      <Variable x:TypeArguments="ui:DatabaseConnection" Name="dbConnection" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtReadLogFacturasIngresadas" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtInputPeopleSoft" />
      <Variable x:TypeArguments="x:String" Name="strPathDownloadFile" />
      <Variable x:TypeArguments="ss:SecureString" Name="Password" />
      <Variable x:TypeArguments="x:String" Name="strPasswordDatabase" />
      <Variable x:TypeArguments="x:String" Name="strUserDatabase" />
      <Variable x:TypeArguments="x:Boolean" Name="boolOCCompañias" />
    </StateMachine.Variables>
  </StateMachine>
</Activity>